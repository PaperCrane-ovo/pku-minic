decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @f1d(@arr: *i32) {
%f1d_0:
  %arr = alloc *i32
  store @arr, %arr
  @i = alloc i32
  store 0, @i
  jump %f1d_1

%f1d_1:
  %0 = load @i
  %1 = lt %0, 10
  br %1, %f1d_2, %f1d_3

%f1d_2:
  %2 = load @i
  %3 = load %arr
  %4 = getptr %3, %2
  %5 = load @i
  store %5, %4
  %6 = load @i
  %7 = add %6, 1
  store %7, @i
  jump %f1d_1

%f1d_3:
  ret
}

fun @f2d(@arr: *[i32, 10]) {
%f2d_0:
  %arr = alloc *[i32, 10]
  store @arr, %arr
  %8 = load %arr
  %9 = getptr %8, 1
  %10 = getelemptr %9, 2
  store 3, %10
  @i = alloc i32
  store 0, @i
  jump %f2d_1

%f2d_1:
  %11 = load @i
  %12 = lt %11, 10
  br %12, %f2d_2, %f2d_3

%f2d_2:
  %13 = load @i
  %14 = load %arr
  %15 = getptr %14, %13
  %16 = getelemptr %15, 0
  call @f1d(%16)
  %17 = load @i
  %18 = add %17, 1
  store %18, @i
  jump %f2d_1

%f2d_3:
  ret
}

fun @main(): i32 {
%main_0:
  ret 33
}

global @a = alloc i32, zeroinit
global @b = alloc i32, zeroinit
global @c = alloc i32, zeroinit
global @d = alloc i32, zeroinit
global @n = alloc i32, zeroinit
global @m = alloc i32, zeroinit
global @k = alloc i32, zeroinit

decl @getint(): i32

decl @getch(): i32

decl @getarray(*i32): i32

decl @putint(i32)

decl @putch(i32)

decl @putarray(i32, *i32)

decl @starttime()

decl @stoptime()

fun @gcd(@m_0: i32, @n_0: i32): i32 {
%entry:
  %m = alloc i32
  store @m_0, %m
  %n = alloc i32
  store @n_0, %n
  %0 = load %n
  %1 = eq %0, 0
  br %1, %gcd_0, %gcd_1

%gcd_0:
  %2 = load %m
  ret %2

%gcd_1:
  jump %gcd_2

%gcd_2:
  %3 = load %n
  %4 = load %m
  %5 = load %n
  %6 = mod %4, %5
  %7 = call @gcd(%3, %6)
  ret %7
}

fun @main(): i32 {
%entry:
  %8 = alloc i32
  %9 = call @getint()
  store %9, %8
  jump %main_0

%main_0:
  %10 = load %8
  %11 = gt %10, 0
  br %11, %main_1, %main_2

%main_1:
  %12 = alloc i32
  %13 = call @getint()
  store %13, %12
  %14 = alloc i32
  %15 = call @getint()
  store %15, %14
  %16 = load %12
  %17 = load %14
  %18 = call @gcd(%16, %17)
  call @putint(%18)
  call @putch(10)
  %19 = load %8
  %20 = sub %19, 1
  store %20, %8
  jump %main_0

%main_2:
  ret 0
}
